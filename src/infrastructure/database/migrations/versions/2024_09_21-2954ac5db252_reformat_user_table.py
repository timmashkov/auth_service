"""reformat user table

Revision ID: 2954ac5db252
Revises: c9e3971b2fbc
Create Date: 2024-09-21 19:36:39.665201

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "2954ac5db252"
down_revision: Union[str, None] = "c9e3971b2fbc"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "permissions",
        "layer",
        existing_type=sa.VARCHAR(),
        comment="К чему относится разрешение ('frontend'/'backend'/...)",
        existing_comment="К чему относится разрешение",
        existing_nullable=False,
    )
    op.alter_column(
        "permissions",
        "role_uuid",
        existing_type=sa.UUID(),
        comment=None,
        existing_comment="УУИД роли",
        existing_nullable=True,
    )
    op.alter_column(
        "roles",
        "user_uuid",
        existing_type=sa.UUID(),
        comment=None,
        existing_comment="УУИД юзера",
        existing_nullable=True,
    )
    op.add_column("users", sa.Column("login", sa.String(length=20), nullable=False))
    op.add_column("users", sa.Column("password", sa.Text(), nullable=False))
    op.add_column("users", sa.Column("email", sa.String(length=50), nullable=False))
    op.add_column(
        "users",
        sa.Column("phone_number", sa.String(length=11), nullable=False),
    )
    op.alter_column(
        "users",
        "nickname",
        existing_type=sa.VARCHAR(),
        comment=None,
        existing_comment="Никнейм",
        existing_nullable=True,
    )
    op.alter_column(
        "users",
        "age",
        existing_type=sa.INTEGER(),
        comment=None,
        existing_comment="Возраст",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "is_verified",
        existing_type=sa.BOOLEAN(),
        comment=None,
        existing_comment="Статус подтверждения",
        existing_nullable=False,
    )
    op.create_unique_constraint(None, "users", ["phone_number"])
    op.create_unique_constraint(None, "users", ["login"])
    op.create_unique_constraint(None, "users", ["email"])
    op.drop_column("users", "first_name")
    op.drop_column("users", "last_name")
    op.drop_column("users", "patronymic")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "patronymic",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
            comment="Отчество",
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "last_name",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
            comment="Фамилия",
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "first_name",
            sa.VARCHAR(),
            autoincrement=False,
            nullable=False,
            comment="Имя",
        ),
    )
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.drop_constraint(None, "users", type_="unique")
    op.alter_column(
        "users",
        "is_verified",
        existing_type=sa.BOOLEAN(),
        comment="Статус подтверждения",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "age",
        existing_type=sa.INTEGER(),
        comment="Возраст",
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "nickname",
        existing_type=sa.VARCHAR(),
        comment="Никнейм",
        existing_nullable=True,
    )
    op.drop_column("users", "phone_number")
    op.drop_column("users", "email")
    op.drop_column("users", "password")
    op.drop_column("users", "login")
    op.alter_column(
        "roles",
        "user_uuid",
        existing_type=sa.UUID(),
        comment="УУИД юзера",
        existing_nullable=True,
    )
    op.alter_column(
        "permissions",
        "role_uuid",
        existing_type=sa.UUID(),
        comment="УУИД роли",
        existing_nullable=True,
    )
    op.alter_column(
        "permissions",
        "layer",
        existing_type=sa.VARCHAR(),
        comment="К чему относится разрешение",
        existing_comment="К чему относится разрешение ('frontend'/'backend'/...)",
        existing_nullable=False,
    )
    # ### end Alembic commands ###
